// ----------------------------------------------------------------------------
// <auto-generated>
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
// </auto-generated>
// ----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;
using __CallingConvention = global::System.Runtime.InteropServices.CallingConvention;
using __IntPtr = global::System.IntPtr;

#pragma warning disable CS0109 // Member does not hide an inherited member; new keyword is not required

namespace gambit
{
    public unsafe partial class game
    {
        public partial struct __Internal
        {
            [SuppressUnmanagedCodeSecurity, DllImport("sharpgambit", EntryPoint = "NewNormalFormGame", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr NewNormalFormGame([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string title, int pc, [MarshalAs(UnmanagedType.LPArray)] string[] players, int[] strategies);

            [SuppressUnmanagedCodeSecurity, DllImport("sharpgambit", EntryPoint = "NewExtensiveFormGame", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr NewExtensiveFormGame();

            [SuppressUnmanagedCodeSecurity, DllImport("sharpgambit", EntryPoint = "NewPlayer", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr NewPlayer(__IntPtr game);

            [SuppressUnmanagedCodeSecurity, DllImport("sharpgambit", EntryPoint = "GetPlayer", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetPlayer(__IntPtr game, int pi);

            [SuppressUnmanagedCodeSecurity, DllImport("sharpgambit", EntryPoint = "NewOutcome", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr NewOutcome(__IntPtr game);

            [SuppressUnmanagedCodeSecurity, DllImport("sharpgambit", EntryPoint = "GetOutcome", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetOutcome(__IntPtr game, int index);

            [SuppressUnmanagedCodeSecurity, DllImport("sharpgambit", EntryPoint = "NewPureStrategyProfile", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr NewPureStrategyProfile(__IntPtr game);
        }

        public static __IntPtr NewNormalFormGame(string title, int pc, string[] players, int[] strategies)
        {
            var ___ret = __Internal.NewNormalFormGame(title, pc, players, strategies);
            return ___ret;
        }

        public static __IntPtr NewExtensiveFormGame()
        {
            var ___ret = __Internal.NewExtensiveFormGame();
            return ___ret;
        }

        public static __IntPtr NewPlayer(__IntPtr game)
        {
            var ___ret = __Internal.NewPlayer(game);
            return ___ret;
        }

        public static __IntPtr GetPlayer(__IntPtr game, int pi)
        {
            var ___ret = __Internal.GetPlayer(game, pi);
            return ___ret;
        }

        public static __IntPtr NewOutcome(__IntPtr game)
        {
            var ___ret = __Internal.NewOutcome(game);
            return ___ret;
        }

        public static __IntPtr GetOutcome(__IntPtr game, int index)
        {
            var ___ret = __Internal.GetOutcome(game, index);
            return ___ret;
        }

        public static __IntPtr NewPureStrategyProfile(__IntPtr game)
        {
            var ___ret = __Internal.NewPureStrategyProfile(game);
            return ___ret;
        }
    }

    public unsafe partial class player
    {
        public partial struct __Internal
        {
            [SuppressUnmanagedCodeSecurity, DllImport("sharpgambit", EntryPoint = "GetPlayerLabel", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetPlayerLabel(__IntPtr player);

            [SuppressUnmanagedCodeSecurity, DllImport("sharpgambit", EntryPoint = "SetPlayerLabel", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr SetPlayerLabel(__IntPtr player, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string label);

            [SuppressUnmanagedCodeSecurity, DllImport("sharpgambit", EntryPoint = "GetPlayerNumber", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetPlayerNumber(__IntPtr player);

            [SuppressUnmanagedCodeSecurity, DllImport("sharpgambit", EntryPoint = "NewPlayerStrategy", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr NewPlayerStrategy(__IntPtr player);

            [SuppressUnmanagedCodeSecurity, DllImport("sharpgambit", EntryPoint = "GetPlayerNumStrategies", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int GetPlayerNumStrategies(__IntPtr player);

            [SuppressUnmanagedCodeSecurity, DllImport("sharpgambit", EntryPoint = "GetPlayerStrategy", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetPlayerStrategy(__IntPtr player, int st);

            [SuppressUnmanagedCodeSecurity, DllImport("sharpgambit", EntryPoint = "GetPlayerStrategies", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetPlayerStrategies(__IntPtr player);
        }

        public static string GetPlayerLabel(__IntPtr player)
        {
            var ___ret = __Internal.GetPlayerLabel(player);
            return CppSharp.Runtime.MarshalUtil.GetString(global::System.Text.Encoding.UTF8, ___ret);
        }

        public static __IntPtr SetPlayerLabel(__IntPtr player, string label)
        {
            var ___ret = __Internal.SetPlayerLabel(player, label);
            return ___ret;
        }

        public static int GetPlayerNumber(__IntPtr player)
        {
            var ___ret = __Internal.GetPlayerNumber(player);
            return ___ret;
        }

        public static __IntPtr NewPlayerStrategy(__IntPtr player)
        {
            var ___ret = __Internal.NewPlayerStrategy(player);
            return ___ret;
        }

        public static int GetPlayerNumStrategies(__IntPtr player)
        {
            var ___ret = __Internal.GetPlayerNumStrategies(player);
            return ___ret;
        }

        public static __IntPtr GetPlayerStrategy(__IntPtr player, int st)
        {
            var ___ret = __Internal.GetPlayerStrategy(player, st);
            return ___ret;
        }

        public static __IntPtr GetPlayerStrategies(__IntPtr player)
        {
            var ___ret = __Internal.GetPlayerStrategies(player);
            return ___ret;
        }
    }

    public unsafe partial class strategy
    {
        public partial struct __Internal
        {
            [SuppressUnmanagedCodeSecurity, DllImport("sharpgambit", EntryPoint = "GetStrategyLabel", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr GetStrategyLabel(__IntPtr strategy);

            [SuppressUnmanagedCodeSecurity, DllImport("sharpgambit", EntryPoint = "SetStrategyLabel", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr SetStrategyLabel(__IntPtr strategy, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(CppSharp.Runtime.UTF8Marshaller))] string label);
        }

        public static string GetStrategyLabel(__IntPtr strategy)
        {
            var ___ret = __Internal.GetStrategyLabel(strategy);
            return CppSharp.Runtime.MarshalUtil.GetString(global::System.Text.Encoding.UTF8, ___ret);
        }

        public static __IntPtr SetStrategyLabel(__IntPtr strategy, string label)
        {
            var ___ret = __Internal.SetStrategyLabel(strategy, label);
            return ___ret;
        }
    }

    public unsafe partial class outcome
    {
        public partial struct __Internal
        {
            [SuppressUnmanagedCodeSecurity, DllImport("sharpgambit", EntryPoint = "SetIntegerPayoff", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr SetIntegerPayoff(__IntPtr outcome, int pl, int payoff);

            [SuppressUnmanagedCodeSecurity, DllImport("sharpgambit", EntryPoint = "SetRationalPayoff", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr SetRationalPayoff(__IntPtr outcome, int pl, int num, int den);

            [SuppressUnmanagedCodeSecurity, DllImport("sharpgambit", EntryPoint = "GetPayoff", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void GetPayoff(__IntPtr outcome, int pl, int* num, int* den);
        }

        public static __IntPtr SetIntegerPayoff(__IntPtr outcome, int pl, int payoff)
        {
            var ___ret = __Internal.SetIntegerPayoff(outcome, pl, payoff);
            return ___ret;
        }

        public static __IntPtr SetRationalPayoff(__IntPtr outcome, int pl, int num, int den)
        {
            var ___ret = __Internal.SetRationalPayoff(outcome, pl, num, den);
            return ___ret;
        }

        public static void GetPayoff(__IntPtr outcome, int pl, out int num, out int den)
        {
            fixed (int* __num2 = &num)
            {
                var __arg2 = __num2;
                fixed (int* __den3 = &den)
                {
                    var __arg3 = __den3;
                    __Internal.GetPayoff(outcome, pl, __arg2, __arg3);
                }
            }
        }
    }
}
