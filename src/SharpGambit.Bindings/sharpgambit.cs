// ----------------------------------------------------------------------------
// <auto-generated>
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
// </auto-generated>
// ----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;
using __CallingConvention = global::System.Runtime.InteropServices.CallingConvention;
using __IntPtr = global::System.IntPtr;

#pragma warning disable CS0109 // Member does not hide an inherited member; new keyword is not required

namespace gambit
{
    public unsafe partial class sharpgambit
    {
        public partial struct __Internal
        {
            [SuppressUnmanagedCodeSecurity, DllImport("sharpgambit", EntryPoint = "?NewGame@@YA?AV?$GameObjectPtr@VGameRep@Gambit@@@Gambit@@XZ", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void NewGame(__IntPtr @return);

            [SuppressUnmanagedCodeSecurity, DllImport("sharpgambit", EntryPoint = "?NewGame@@YA?AV?$GameObjectPtr@VGameRep@Gambit@@@Gambit@@QEAH@Z", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void NewGame(__IntPtr @return, int[] s);

            [SuppressUnmanagedCodeSecurity, DllImport("sharpgambit", EntryPoint = "?AddPlayerToGame@@YA?AV?$GameObjectPtr@VGamePlayerRep@Gambit@@@Gambit@@V?$GameObjectPtr@VGameRep@Gambit@@@2@@Z", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void AddPlayerToGame(__IntPtr @return, __IntPtr game);
        }

        public static global::gambit.Gambit.GameObjectPtr<global::gambit.Gambit.GameRep> NewGame()
        {
            var ___ret = new global::gambit.Gambit.GameObjectPtr.__Internal();
            __Internal.NewGame(new IntPtr(&___ret));
            var _____ret = global::gambit.Gambit.GameObjectPtr<global::gambit.Gambit.GameRep>.__CreateInstance(___ret);
            global::gambit.Gambit.GameObjectPtr.__Internal.dtorc__N_Gambit_S_GameObjectPtr____N_Gambit_S_GameRep(new __IntPtr(&___ret));
            return _____ret;
        }

        public static global::gambit.Gambit.GameObjectPtr<global::gambit.Gambit.GameRep> NewGame(int[] s)
        {
            var ___ret = new global::gambit.Gambit.GameObjectPtr.__Internal();
            __Internal.NewGame(new IntPtr(&___ret), s);
            var _____ret = global::gambit.Gambit.GameObjectPtr<global::gambit.Gambit.GameRep>.__CreateInstance(___ret);
            global::gambit.Gambit.GameObjectPtr.__Internal.dtorc__N_Gambit_S_GameObjectPtr____N_Gambit_S_GameRep(new __IntPtr(&___ret));
            return _____ret;
        }

        public static global::gambit.Gambit.GameObjectPtr<global::gambit.Gambit.GamePlayerRep> AddPlayerToGame(global::gambit.Gambit.GameObjectPtr<global::gambit.Gambit.GameRep> game)
        {
            if (ReferenceEquals(game, null))
                throw new global::System.ArgumentNullException("game", "Cannot be null because it is passed by value.");
            var __arg0 = game.__Instance;
            var ___ret = new global::gambit.Gambit.GameObjectPtr.__Internal();
            __Internal.AddPlayerToGame(new IntPtr(&___ret), __arg0);
            var _____ret = global::gambit.Gambit.GameObjectPtr<global::gambit.Gambit.GamePlayerRep>.__CreateInstance(___ret);
            global::gambit.Gambit.GameObjectPtr.__Internal.dtorc__N_Gambit_S_GameObjectPtr____N_Gambit_S_GamePlayerRep(new __IntPtr(&___ret));
            return _____ret;
        }
    }
}

namespace Std
{
    namespace CompressedPair
    {
        [StructLayout(LayoutKind.Sequential, Size = 24, Pack = 8)]
        public unsafe partial struct __Internalc__N_std_S__Compressed_pair____N_std_S_allocator____N_std_S_vector____N_std_S_shared_ptr____N_Gambit_N_agg_S_proj_func___N_std_S_allocator__S2____N_std_S__Vector_val____N_std_S__Simple_types__S1__Vb1
        {
            internal global::Std.VectorVal.__Internal _Myval2;
        }

        [StructLayout(LayoutKind.Sequential, Size = 24, Pack = 8)]
        public unsafe partial struct __Internalc__N_std_S__Compressed_pair____N_std_S_allocator____N_std_S_vector____N_Gambit_N_agg_S_trie_map__d___N_std_S_allocator__S2____N_std_S__Vector_val____N_std_S__Simple_types__S1__Vb1
        {
            internal global::Std.VectorVal.__Internal _Myval2;
        }

        [StructLayout(LayoutKind.Sequential, Size = 24, Pack = 8)]
        public unsafe partial struct __Internalc__N_std_S__Compressed_pair____N_std_S_allocator____N_Gambit_N_agg_S_trie_map__d___N_std_S__Vector_val____N_std_S__Simple_types__S1__Vb1
        {
            internal global::Std.VectorVal.__Internal _Myval2;
        }

        [StructLayout(LayoutKind.Sequential, Size = 24, Pack = 8)]
        public unsafe partial struct __Internalc__N_std_S__Compressed_pair____N_std_S_allocator_____N_Gambit_N_agg_S_TrieNode__d___N_std_S__Vector_val____N_std_S__Simple_types__S1__Vb1
        {
            internal global::Std.VectorVal.__Internal _Myval2;
        }

        [StructLayout(LayoutKind.Sequential, Size = 24, Pack = 8)]
        public unsafe partial struct __Internalc__N_std_S__Compressed_pair____N_std_S_allocator____N_std_S_shared_ptr____N_Gambit_N_agg_S_proj_func___N_std_S__Vector_val____N_std_S__Simple_types__S1__Vb1
        {
            internal global::Std.VectorVal.__Internal _Myval2;
        }

        [StructLayout(LayoutKind.Sequential, Size = 16, Pack = 8)]
        public unsafe partial struct __Internalc__N_std_S__Compressed_pair____N_std_S_allocator____N_std_S__Tree_node____N_std_S_pair__1__N_Gambit_S_GameObjectPtr____N_Gambit_S_GameActionRep_d__v___N_std_S__Tree_val____N_std_S__Tree_simple_types__S2__Vb1
        {
            internal global::Std.TreeVal.__Internal _Myval2;
        }

        [StructLayout(LayoutKind.Sequential, Size = 16, Pack = 8)]
        public unsafe partial struct __Internalc__N_std_S__Compressed_pair____N_std_S_less____N_Gambit_S_GameObjectPtr____N_Gambit_S_GameActionRep___N_std_S__Compressed_pair____N_std_S_allocator____N_std_S__Tree_node____N_std_S_pair__1S1__d__v___N_std_S__Tree_val____N_std_S__Tree_simple_types__S6__Vb1_Vb1
        {
            internal global::Std.CompressedPair.__Internalc__N_std_S__Compressed_pair____N_std_S_allocator____N_std_S__Tree_node____N_std_S_pair__1__N_Gambit_S_GameObjectPtr____N_Gambit_S_GameActionRep_d__v___N_std_S__Tree_val____N_std_S__Tree_simple_types__S2__Vb1 _Myval2;
        }

        [StructLayout(LayoutKind.Sequential, Size = 16, Pack = 8)]
        public unsafe partial struct __Internalc__N_std_S__Compressed_pair____N_std_S_allocator____N_std_S__Tree_node____N_std_S_pair__1__N_Gambit_S_GameObjectPtr____N_Gambit_S_GameInfosetRep_d__v___N_std_S__Tree_val____N_std_S__Tree_simple_types__S2__Vb1
        {
            internal global::Std.TreeVal.__Internal _Myval2;
        }

        [StructLayout(LayoutKind.Sequential, Size = 16, Pack = 8)]
        public unsafe partial struct __Internalc__N_std_S__Compressed_pair____N_std_S_less____N_Gambit_S_GameObjectPtr____N_Gambit_S_GameInfosetRep___N_std_S__Compressed_pair____N_std_S_allocator____N_std_S__Tree_node____N_std_S_pair__1S1__d__v___N_std_S__Tree_val____N_std_S__Tree_simple_types__S6__Vb1_Vb1
        {
            internal global::Std.CompressedPair.__Internalc__N_std_S__Compressed_pair____N_std_S_allocator____N_std_S__Tree_node____N_std_S_pair__1__N_Gambit_S_GameObjectPtr____N_Gambit_S_GameInfosetRep_d__v___N_std_S__Tree_val____N_std_S__Tree_simple_types__S2__Vb1 _Myval2;
        }

        [StructLayout(LayoutKind.Sequential, Size = 16, Pack = 8)]
        public unsafe partial struct __Internalc__N_std_S__Compressed_pair____N_std_S_allocator____N_std_S__Tree_node____N_std_S_pair__1__N_Gambit_S_GameObjectPtr____N_Gambit_S_GameNodeRep___N_std_S_map____N_Gambit_S_GameObjectPtr____N_Gambit_S_GamePlayerRep_d___N_std_S_less__S6____N_std_S_allocator____N_std_S_pair__1S6__d__v___N_std_S__Tree_val____N_std_S__Tree_simple_types__S2__Vb1
        {
            internal global::Std.TreeVal.__Internal _Myval2;
        }

        [StructLayout(LayoutKind.Sequential, Size = 16, Pack = 8)]
        public unsafe partial struct __Internalc__N_std_S__Compressed_pair____N_std_S_less____N_Gambit_S_GameObjectPtr____N_Gambit_S_GameNodeRep___N_std_S__Compressed_pair____N_std_S_allocator____N_std_S__Tree_node____N_std_S_pair__1S1____N_std_S_map____N_Gambit_S_GameObjectPtr____N_Gambit_S_GamePlayerRep_d___N_std_S_less__S8____N_std_S_allocator____N_std_S_pair__1S8__d__v___N_std_S__Tree_val____N_std_S__Tree_simple_types__S6__Vb1_Vb1
        {
            internal global::Std.CompressedPair.__Internalc__N_std_S__Compressed_pair____N_std_S_allocator____N_std_S__Tree_node____N_std_S_pair__1__N_Gambit_S_GameObjectPtr____N_Gambit_S_GameNodeRep___N_std_S_map____N_Gambit_S_GameObjectPtr____N_Gambit_S_GamePlayerRep_d___N_std_S_less__S6____N_std_S_allocator____N_std_S_pair__1S6__d__v___N_std_S__Tree_val____N_std_S__Tree_simple_types__S2__Vb1 _Myval2;
        }

        [StructLayout(LayoutKind.Sequential, Size = 16, Pack = 8)]
        public unsafe partial struct __Internalc__N_std_S__Compressed_pair____N_std_S_allocator____N_std_S__Tree_node____N_std_S_pair__1__N_Gambit_S_GameObjectPtr____N_Gambit_S_GameNodeRep_d__v___N_std_S__Tree_val____N_std_S__Tree_simple_types__S2__Vb1
        {
            internal global::Std.TreeVal.__Internal _Myval2;
        }

        [StructLayout(LayoutKind.Sequential, Size = 16, Pack = 8)]
        public unsafe partial struct __Internalc__N_std_S__Compressed_pair____N_std_S_less____N_Gambit_S_GameObjectPtr____N_Gambit_S_GameNodeRep___N_std_S__Compressed_pair____N_std_S_allocator____N_std_S__Tree_node____N_std_S_pair__1S1__d__v___N_std_S__Tree_val____N_std_S__Tree_simple_types__S6__Vb1_Vb1
        {
            internal global::Std.CompressedPair.__Internalc__N_std_S__Compressed_pair____N_std_S_allocator____N_std_S__Tree_node____N_std_S_pair__1__N_Gambit_S_GameObjectPtr____N_Gambit_S_GameNodeRep_d__v___N_std_S__Tree_val____N_std_S__Tree_simple_types__S2__Vb1 _Myval2;
        }

        [StructLayout(LayoutKind.Sequential, Size = 16, Pack = 8)]
        public unsafe partial struct __Internalc__N_std_S__Compressed_pair____N_std_S_allocator____N_std_S__Tree_node____N_std_S_pair__1__N_Gambit_S_GameObjectPtr____N_Gambit_S_GamePlayerRep_d__v___N_std_S__Tree_val____N_std_S__Tree_simple_types__S2__Vb1
        {
            internal global::Std.TreeVal.__Internal _Myval2;
        }

        [StructLayout(LayoutKind.Sequential, Size = 16, Pack = 8)]
        public unsafe partial struct __Internalc__N_std_S__Compressed_pair____N_std_S_less____N_Gambit_S_GameObjectPtr____N_Gambit_S_GamePlayerRep___N_std_S__Compressed_pair____N_std_S_allocator____N_std_S__Tree_node____N_std_S_pair__1S1__d__v___N_std_S__Tree_val____N_std_S__Tree_simple_types__S6__Vb1_Vb1
        {
            internal global::Std.CompressedPair.__Internalc__N_std_S__Compressed_pair____N_std_S_allocator____N_std_S__Tree_node____N_std_S_pair__1__N_Gambit_S_GameObjectPtr____N_Gambit_S_GamePlayerRep_d__v___N_std_S__Tree_val____N_std_S__Tree_simple_types__S2__Vb1 _Myval2;
        }

        [StructLayout(LayoutKind.Sequential, Size = 16, Pack = 8)]
        public unsafe partial struct __Internalc__N_std_S__Compressed_pair____N_std_S_allocator____N_std_S__Tree_node____N_std_S_pair__1__N_Gambit_S_GameObjectPtr____N_Gambit_S_GamePlayerRep___N_std_S_map____N_Gambit_S_GameObjectPtr____N_Gambit_S_GameStrategyRep_d___N_std_S_less__S6____N_std_S_allocator____N_std_S_pair__1S6__d__v___N_std_S__Tree_val____N_std_S__Tree_simple_types__S2__Vb1
        {
            internal global::Std.TreeVal.__Internal _Myval2;
        }

        [StructLayout(LayoutKind.Sequential, Size = 16, Pack = 8)]
        public unsafe partial struct __Internalc__N_std_S__Compressed_pair____N_std_S_less____N_Gambit_S_GameObjectPtr____N_Gambit_S_GamePlayerRep___N_std_S__Compressed_pair____N_std_S_allocator____N_std_S__Tree_node____N_std_S_pair__1S1____N_std_S_map____N_Gambit_S_GameObjectPtr____N_Gambit_S_GameStrategyRep_d___N_std_S_less__S8____N_std_S_allocator____N_std_S_pair__1S8__d__v___N_std_S__Tree_val____N_std_S__Tree_simple_types__S6__Vb1_Vb1
        {
            internal global::Std.CompressedPair.__Internalc__N_std_S__Compressed_pair____N_std_S_allocator____N_std_S__Tree_node____N_std_S_pair__1__N_Gambit_S_GameObjectPtr____N_Gambit_S_GamePlayerRep___N_std_S_map____N_Gambit_S_GameObjectPtr____N_Gambit_S_GameStrategyRep_d___N_std_S_less__S6____N_std_S_allocator____N_std_S_pair__1S6__d__v___N_std_S__Tree_val____N_std_S__Tree_simple_types__S2__Vb1 _Myval2;
        }

        [StructLayout(LayoutKind.Sequential, Size = 16, Pack = 8)]
        public unsafe partial struct __Internalc__N_std_S__Compressed_pair____N_std_S_allocator____N_std_S__Tree_node____N_std_S_pair__1__N_Gambit_S_GameObjectPtr____N_Gambit_S_GameActionRep___N_Gambit_S_Rational__v___N_std_S__Tree_val____N_std_S__Tree_simple_types__S2__Vb1
        {
            internal global::Std.TreeVal.__Internal _Myval2;
        }

        [StructLayout(LayoutKind.Sequential, Size = 16, Pack = 8)]
        public unsafe partial struct __Internalc__N_std_S__Compressed_pair____N_std_S_less____N_Gambit_S_GameObjectPtr____N_Gambit_S_GameActionRep___N_std_S__Compressed_pair____N_std_S_allocator____N_std_S__Tree_node____N_std_S_pair__1S1____N_Gambit_S_Rational__v___N_std_S__Tree_val____N_std_S__Tree_simple_types__S6__Vb1_Vb1
        {
            internal global::Std.CompressedPair.__Internalc__N_std_S__Compressed_pair____N_std_S_allocator____N_std_S__Tree_node____N_std_S_pair__1__N_Gambit_S_GameObjectPtr____N_Gambit_S_GameActionRep___N_Gambit_S_Rational__v___N_std_S__Tree_val____N_std_S__Tree_simple_types__S2__Vb1 _Myval2;
        }

        [StructLayout(LayoutKind.Sequential, Size = 16, Pack = 8)]
        public unsafe partial struct __Internalc__N_std_S__Compressed_pair____N_std_S_allocator____N_std_S__Tree_node____N_std_S_pair__1__N_Gambit_S_GameObjectPtr____N_Gambit_S_GameInfosetRep___N_Gambit_S_Rational__v___N_std_S__Tree_val____N_std_S__Tree_simple_types__S2__Vb1
        {
            internal global::Std.TreeVal.__Internal _Myval2;
        }

        [StructLayout(LayoutKind.Sequential, Size = 16, Pack = 8)]
        public unsafe partial struct __Internalc__N_std_S__Compressed_pair____N_std_S_less____N_Gambit_S_GameObjectPtr____N_Gambit_S_GameInfosetRep___N_std_S__Compressed_pair____N_std_S_allocator____N_std_S__Tree_node____N_std_S_pair__1S1____N_Gambit_S_Rational__v___N_std_S__Tree_val____N_std_S__Tree_simple_types__S6__Vb1_Vb1
        {
            internal global::Std.CompressedPair.__Internalc__N_std_S__Compressed_pair____N_std_S_allocator____N_std_S__Tree_node____N_std_S_pair__1__N_Gambit_S_GameObjectPtr____N_Gambit_S_GameInfosetRep___N_Gambit_S_Rational__v___N_std_S__Tree_val____N_std_S__Tree_simple_types__S2__Vb1 _Myval2;
        }

        [StructLayout(LayoutKind.Sequential, Size = 16, Pack = 8)]
        public unsafe partial struct __Internalc__N_std_S__Compressed_pair____N_std_S_allocator____N_std_S__Tree_node____N_std_S_pair__1__N_Gambit_S_GameObjectPtr____N_Gambit_S_GameNodeRep___N_std_S_map____N_Gambit_S_GameObjectPtr____N_Gambit_S_GamePlayerRep___N_Gambit_S_Rational___N_std_S_less__S6____N_std_S_allocator____N_std_S_pair__1S6__S8___v___N_std_S__Tree_val____N_std_S__Tree_simple_types__S2__Vb1
        {
            internal global::Std.TreeVal.__Internal _Myval2;
        }

        [StructLayout(LayoutKind.Sequential, Size = 16, Pack = 8)]
        public unsafe partial struct __Internalc__N_std_S__Compressed_pair____N_std_S_less____N_Gambit_S_GameObjectPtr____N_Gambit_S_GameNodeRep___N_std_S__Compressed_pair____N_std_S_allocator____N_std_S__Tree_node____N_std_S_pair__1S1____N_std_S_map____N_Gambit_S_GameObjectPtr____N_Gambit_S_GamePlayerRep___N_Gambit_S_Rational___N_std_S_less__S8____N_std_S_allocator____N_std_S_pair__1S8__S10___v___N_std_S__Tree_val____N_std_S__Tree_simple_types__S6__Vb1_Vb1
        {
            internal global::Std.CompressedPair.__Internalc__N_std_S__Compressed_pair____N_std_S_allocator____N_std_S__Tree_node____N_std_S_pair__1__N_Gambit_S_GameObjectPtr____N_Gambit_S_GameNodeRep___N_std_S_map____N_Gambit_S_GameObjectPtr____N_Gambit_S_GamePlayerRep___N_Gambit_S_Rational___N_std_S_less__S6____N_std_S_allocator____N_std_S_pair__1S6__S8___v___N_std_S__Tree_val____N_std_S__Tree_simple_types__S2__Vb1 _Myval2;
        }

        [StructLayout(LayoutKind.Sequential, Size = 16, Pack = 8)]
        public unsafe partial struct __Internalc__N_std_S__Compressed_pair____N_std_S_allocator____N_std_S__Tree_node____N_std_S_pair__1__N_Gambit_S_GameObjectPtr____N_Gambit_S_GameNodeRep___N_Gambit_S_Rational__v___N_std_S__Tree_val____N_std_S__Tree_simple_types__S2__Vb1
        {
            internal global::Std.TreeVal.__Internal _Myval2;
        }

        [StructLayout(LayoutKind.Sequential, Size = 16, Pack = 8)]
        public unsafe partial struct __Internalc__N_std_S__Compressed_pair____N_std_S_less____N_Gambit_S_GameObjectPtr____N_Gambit_S_GameNodeRep___N_std_S__Compressed_pair____N_std_S_allocator____N_std_S__Tree_node____N_std_S_pair__1S1____N_Gambit_S_Rational__v___N_std_S__Tree_val____N_std_S__Tree_simple_types__S6__Vb1_Vb1
        {
            internal global::Std.CompressedPair.__Internalc__N_std_S__Compressed_pair____N_std_S_allocator____N_std_S__Tree_node____N_std_S_pair__1__N_Gambit_S_GameObjectPtr____N_Gambit_S_GameNodeRep___N_Gambit_S_Rational__v___N_std_S__Tree_val____N_std_S__Tree_simple_types__S2__Vb1 _Myval2;
        }

        [StructLayout(LayoutKind.Sequential, Size = 16, Pack = 8)]
        public unsafe partial struct __Internalc__N_std_S__Compressed_pair____N_std_S_allocator____N_std_S__Tree_node____N_std_S_pair__1__N_Gambit_S_GameObjectPtr____N_Gambit_S_GamePlayerRep___N_Gambit_S_Rational__v___N_std_S__Tree_val____N_std_S__Tree_simple_types__S2__Vb1
        {
            internal global::Std.TreeVal.__Internal _Myval2;
        }

        [StructLayout(LayoutKind.Sequential, Size = 16, Pack = 8)]
        public unsafe partial struct __Internalc__N_std_S__Compressed_pair____N_std_S_less____N_Gambit_S_GameObjectPtr____N_Gambit_S_GamePlayerRep___N_std_S__Compressed_pair____N_std_S_allocator____N_std_S__Tree_node____N_std_S_pair__1S1____N_Gambit_S_Rational__v___N_std_S__Tree_val____N_std_S__Tree_simple_types__S6__Vb1_Vb1
        {
            internal global::Std.CompressedPair.__Internalc__N_std_S__Compressed_pair____N_std_S_allocator____N_std_S__Tree_node____N_std_S_pair__1__N_Gambit_S_GameObjectPtr____N_Gambit_S_GamePlayerRep___N_Gambit_S_Rational__v___N_std_S__Tree_val____N_std_S__Tree_simple_types__S2__Vb1 _Myval2;
        }

        [StructLayout(LayoutKind.Sequential, Size = 16, Pack = 8)]
        public unsafe partial struct __Internalc__N_std_S__Compressed_pair____N_std_S_allocator____N_std_S__Tree_node____N_std_S_pair__1__N_Gambit_S_GameObjectPtr____N_Gambit_S_GamePlayerRep___N_std_S_map____N_Gambit_S_GameObjectPtr____N_Gambit_S_GameStrategyRep___N_Gambit_S_Rational___N_std_S_less__S6____N_std_S_allocator____N_std_S_pair__1S6__S8___v___N_std_S__Tree_val____N_std_S__Tree_simple_types__S2__Vb1
        {
            internal global::Std.TreeVal.__Internal _Myval2;
        }

        [StructLayout(LayoutKind.Sequential, Size = 16, Pack = 8)]
        public unsafe partial struct __Internalc__N_std_S__Compressed_pair____N_std_S_less____N_Gambit_S_GameObjectPtr____N_Gambit_S_GamePlayerRep___N_std_S__Compressed_pair____N_std_S_allocator____N_std_S__Tree_node____N_std_S_pair__1S1____N_std_S_map____N_Gambit_S_GameObjectPtr____N_Gambit_S_GameStrategyRep___N_Gambit_S_Rational___N_std_S_less__S8____N_std_S_allocator____N_std_S_pair__1S8__S10___v___N_std_S__Tree_val____N_std_S__Tree_simple_types__S6__Vb1_Vb1
        {
            internal global::Std.CompressedPair.__Internalc__N_std_S__Compressed_pair____N_std_S_allocator____N_std_S__Tree_node____N_std_S_pair__1__N_Gambit_S_GameObjectPtr____N_Gambit_S_GamePlayerRep___N_std_S_map____N_Gambit_S_GameObjectPtr____N_Gambit_S_GameStrategyRep___N_Gambit_S_Rational___N_std_S_less__S6____N_std_S_allocator____N_std_S_pair__1S6__S8___v___N_std_S__Tree_val____N_std_S__Tree_simple_types__S2__Vb1 _Myval2;
        }

        [StructLayout(LayoutKind.Sequential, Size = 16, Pack = 8)]
        public unsafe partial struct __Internalc__N_std_S__Compressed_pair____N_std_S_allocator____N_std_S__Tree_node____N_std_S_pair__1__N_Gambit_S_GameObjectPtr____N_Gambit_S_GameNodeRep_b__v___N_std_S__Tree_val____N_std_S__Tree_simple_types__S2__Vb1
        {
            internal global::Std.TreeVal.__Internal _Myval2;
        }

        [StructLayout(LayoutKind.Sequential, Size = 16, Pack = 8)]
        public unsafe partial struct __Internalc__N_std_S__Compressed_pair____N_std_S_less____N_Gambit_S_GameObjectPtr____N_Gambit_S_GameNodeRep___N_std_S__Compressed_pair____N_std_S_allocator____N_std_S__Tree_node____N_std_S_pair__1S1__b__v___N_std_S__Tree_val____N_std_S__Tree_simple_types__S6__Vb1_Vb1
        {
            internal global::Std.CompressedPair.__Internalc__N_std_S__Compressed_pair____N_std_S_allocator____N_std_S__Tree_node____N_std_S_pair__1__N_Gambit_S_GameObjectPtr____N_Gambit_S_GameNodeRep_b__v___N_std_S__Tree_val____N_std_S__Tree_simple_types__S2__Vb1 _Myval2;
        }

        [StructLayout(LayoutKind.Sequential, Size = 16, Pack = 8)]
        public unsafe partial struct __Internalc__N_std_S__Compressed_pair____N_std_S_allocator____N_std_S__Tree_node____N_std_S_pair__1__N_Gambit_S_GameObjectPtr____N_Gambit_S_GameInfosetRep_b__v___N_std_S__Tree_val____N_std_S__Tree_simple_types__S2__Vb1
        {
            internal global::Std.TreeVal.__Internal _Myval2;
        }

        [StructLayout(LayoutKind.Sequential, Size = 16, Pack = 8)]
        public unsafe partial struct __Internalc__N_std_S__Compressed_pair____N_std_S_less____N_Gambit_S_GameObjectPtr____N_Gambit_S_GameInfosetRep___N_std_S__Compressed_pair____N_std_S_allocator____N_std_S__Tree_node____N_std_S_pair__1S1__b__v___N_std_S__Tree_val____N_std_S__Tree_simple_types__S6__Vb1_Vb1
        {
            internal global::Std.CompressedPair.__Internalc__N_std_S__Compressed_pair____N_std_S_allocator____N_std_S__Tree_node____N_std_S_pair__1__N_Gambit_S_GameObjectPtr____N_Gambit_S_GameInfosetRep_b__v___N_std_S__Tree_val____N_std_S__Tree_simple_types__S2__Vb1 _Myval2;
        }
    }

}
namespace Std
{
    namespace Map
    {
        [StructLayout(LayoutKind.Sequential, Size = 16, Pack = 8)]
        public unsafe partial struct __Internalc__N_std_S_map____N_Gambit_S_GameObjectPtr____N_Gambit_S_GameActionRep_d___N_std_S_less__S0____N_std_S_allocator____N_std_S_pair__1S0__d
        {
            internal global::Std.CompressedPair.__Internalc__N_std_S__Compressed_pair____N_std_S_less____N_Gambit_S_GameObjectPtr____N_Gambit_S_GameActionRep___N_std_S__Compressed_pair____N_std_S_allocator____N_std_S__Tree_node____N_std_S_pair__1S1__d__v___N_std_S__Tree_val____N_std_S__Tree_simple_types__S6__Vb1_Vb1 _Mypair;
        }

        [StructLayout(LayoutKind.Sequential, Size = 16, Pack = 8)]
        public unsafe partial struct __Internalc__N_std_S_map____N_Gambit_S_GameObjectPtr____N_Gambit_S_GameInfosetRep_d___N_std_S_less__S0____N_std_S_allocator____N_std_S_pair__1S0__d
        {
            internal global::Std.CompressedPair.__Internalc__N_std_S__Compressed_pair____N_std_S_less____N_Gambit_S_GameObjectPtr____N_Gambit_S_GameInfosetRep___N_std_S__Compressed_pair____N_std_S_allocator____N_std_S__Tree_node____N_std_S_pair__1S1__d__v___N_std_S__Tree_val____N_std_S__Tree_simple_types__S6__Vb1_Vb1 _Mypair;
        }

        [StructLayout(LayoutKind.Sequential, Size = 16, Pack = 8)]
        public unsafe partial struct __Internalc__N_std_S_map____N_Gambit_S_GameObjectPtr____N_Gambit_S_GameNodeRep___N_std_S_map____N_Gambit_S_GameObjectPtr____N_Gambit_S_GamePlayerRep_d___N_std_S_less__S3____N_std_S_allocator____N_std_S_pair__1S3__d___N_std_S_less__S0____N_std_S_allocator____N_std_S_pair__1S0__S2_
        {
            internal global::Std.CompressedPair.__Internalc__N_std_S__Compressed_pair____N_std_S_less____N_Gambit_S_GameObjectPtr____N_Gambit_S_GameNodeRep___N_std_S__Compressed_pair____N_std_S_allocator____N_std_S__Tree_node____N_std_S_pair__1S1____N_std_S_map____N_Gambit_S_GameObjectPtr____N_Gambit_S_GamePlayerRep_d___N_std_S_less__S8____N_std_S_allocator____N_std_S_pair__1S8__d__v___N_std_S__Tree_val____N_std_S__Tree_simple_types__S6__Vb1_Vb1 _Mypair;
        }

        [StructLayout(LayoutKind.Sequential, Size = 16, Pack = 8)]
        public unsafe partial struct __Internalc__N_std_S_map____N_Gambit_S_GameObjectPtr____N_Gambit_S_GameNodeRep_d___N_std_S_less__S0____N_std_S_allocator____N_std_S_pair__1S0__d
        {
            internal global::Std.CompressedPair.__Internalc__N_std_S__Compressed_pair____N_std_S_less____N_Gambit_S_GameObjectPtr____N_Gambit_S_GameNodeRep___N_std_S__Compressed_pair____N_std_S_allocator____N_std_S__Tree_node____N_std_S_pair__1S1__d__v___N_std_S__Tree_val____N_std_S__Tree_simple_types__S6__Vb1_Vb1 _Mypair;
        }

        [StructLayout(LayoutKind.Sequential, Size = 16, Pack = 8)]
        public unsafe partial struct __Internalc__N_std_S_map____N_Gambit_S_GameObjectPtr____N_Gambit_S_GamePlayerRep_d___N_std_S_less__S0____N_std_S_allocator____N_std_S_pair__1S0__d
        {
            internal global::Std.CompressedPair.__Internalc__N_std_S__Compressed_pair____N_std_S_less____N_Gambit_S_GameObjectPtr____N_Gambit_S_GamePlayerRep___N_std_S__Compressed_pair____N_std_S_allocator____N_std_S__Tree_node____N_std_S_pair__1S1__d__v___N_std_S__Tree_val____N_std_S__Tree_simple_types__S6__Vb1_Vb1 _Mypair;
        }

        [StructLayout(LayoutKind.Sequential, Size = 16, Pack = 8)]
        public unsafe partial struct __Internalc__N_std_S_map____N_Gambit_S_GameObjectPtr____N_Gambit_S_GamePlayerRep___N_std_S_map____N_Gambit_S_GameObjectPtr____N_Gambit_S_GameStrategyRep_d___N_std_S_less__S3____N_std_S_allocator____N_std_S_pair__1S3__d___N_std_S_less__S0____N_std_S_allocator____N_std_S_pair__1S0__S2_
        {
            internal global::Std.CompressedPair.__Internalc__N_std_S__Compressed_pair____N_std_S_less____N_Gambit_S_GameObjectPtr____N_Gambit_S_GamePlayerRep___N_std_S__Compressed_pair____N_std_S_allocator____N_std_S__Tree_node____N_std_S_pair__1S1____N_std_S_map____N_Gambit_S_GameObjectPtr____N_Gambit_S_GameStrategyRep_d___N_std_S_less__S8____N_std_S_allocator____N_std_S_pair__1S8__d__v___N_std_S__Tree_val____N_std_S__Tree_simple_types__S6__Vb1_Vb1 _Mypair;
        }

        [StructLayout(LayoutKind.Sequential, Size = 16, Pack = 8)]
        public unsafe partial struct __Internalc__N_std_S_map____N_Gambit_S_GameObjectPtr____N_Gambit_S_GameActionRep___N_Gambit_S_Rational___N_std_S_less__S0____N_std_S_allocator____N_std_S_pair__1S0__S2_
        {
            internal global::Std.CompressedPair.__Internalc__N_std_S__Compressed_pair____N_std_S_less____N_Gambit_S_GameObjectPtr____N_Gambit_S_GameActionRep___N_std_S__Compressed_pair____N_std_S_allocator____N_std_S__Tree_node____N_std_S_pair__1S1____N_Gambit_S_Rational__v___N_std_S__Tree_val____N_std_S__Tree_simple_types__S6__Vb1_Vb1 _Mypair;
        }

        [StructLayout(LayoutKind.Sequential, Size = 16, Pack = 8)]
        public unsafe partial struct __Internalc__N_std_S_map____N_Gambit_S_GameObjectPtr____N_Gambit_S_GameInfosetRep___N_Gambit_S_Rational___N_std_S_less__S0____N_std_S_allocator____N_std_S_pair__1S0__S2_
        {
            internal global::Std.CompressedPair.__Internalc__N_std_S__Compressed_pair____N_std_S_less____N_Gambit_S_GameObjectPtr____N_Gambit_S_GameInfosetRep___N_std_S__Compressed_pair____N_std_S_allocator____N_std_S__Tree_node____N_std_S_pair__1S1____N_Gambit_S_Rational__v___N_std_S__Tree_val____N_std_S__Tree_simple_types__S6__Vb1_Vb1 _Mypair;
        }

        [StructLayout(LayoutKind.Sequential, Size = 16, Pack = 8)]
        public unsafe partial struct __Internalc__N_std_S_map____N_Gambit_S_GameObjectPtr____N_Gambit_S_GameNodeRep___N_std_S_map____N_Gambit_S_GameObjectPtr____N_Gambit_S_GamePlayerRep___N_Gambit_S_Rational___N_std_S_less__S3____N_std_S_allocator____N_std_S_pair__1S3__S5____N_std_S_less__S0____N_std_S_allocator____N_std_S_pair__1S0__S2_
        {
            internal global::Std.CompressedPair.__Internalc__N_std_S__Compressed_pair____N_std_S_less____N_Gambit_S_GameObjectPtr____N_Gambit_S_GameNodeRep___N_std_S__Compressed_pair____N_std_S_allocator____N_std_S__Tree_node____N_std_S_pair__1S1____N_std_S_map____N_Gambit_S_GameObjectPtr____N_Gambit_S_GamePlayerRep___N_Gambit_S_Rational___N_std_S_less__S8____N_std_S_allocator____N_std_S_pair__1S8__S10___v___N_std_S__Tree_val____N_std_S__Tree_simple_types__S6__Vb1_Vb1 _Mypair;
        }

        [StructLayout(LayoutKind.Sequential, Size = 16, Pack = 8)]
        public unsafe partial struct __Internalc__N_std_S_map____N_Gambit_S_GameObjectPtr____N_Gambit_S_GameNodeRep___N_Gambit_S_Rational___N_std_S_less__S0____N_std_S_allocator____N_std_S_pair__1S0__S2_
        {
            internal global::Std.CompressedPair.__Internalc__N_std_S__Compressed_pair____N_std_S_less____N_Gambit_S_GameObjectPtr____N_Gambit_S_GameNodeRep___N_std_S__Compressed_pair____N_std_S_allocator____N_std_S__Tree_node____N_std_S_pair__1S1____N_Gambit_S_Rational__v___N_std_S__Tree_val____N_std_S__Tree_simple_types__S6__Vb1_Vb1 _Mypair;
        }

        [StructLayout(LayoutKind.Sequential, Size = 16, Pack = 8)]
        public unsafe partial struct __Internalc__N_std_S_map____N_Gambit_S_GameObjectPtr____N_Gambit_S_GamePlayerRep___N_Gambit_S_Rational___N_std_S_less__S0____N_std_S_allocator____N_std_S_pair__1S0__S2_
        {
            internal global::Std.CompressedPair.__Internalc__N_std_S__Compressed_pair____N_std_S_less____N_Gambit_S_GameObjectPtr____N_Gambit_S_GamePlayerRep___N_std_S__Compressed_pair____N_std_S_allocator____N_std_S__Tree_node____N_std_S_pair__1S1____N_Gambit_S_Rational__v___N_std_S__Tree_val____N_std_S__Tree_simple_types__S6__Vb1_Vb1 _Mypair;
        }

        [StructLayout(LayoutKind.Sequential, Size = 16, Pack = 8)]
        public unsafe partial struct __Internalc__N_std_S_map____N_Gambit_S_GameObjectPtr____N_Gambit_S_GamePlayerRep___N_std_S_map____N_Gambit_S_GameObjectPtr____N_Gambit_S_GameStrategyRep___N_Gambit_S_Rational___N_std_S_less__S3____N_std_S_allocator____N_std_S_pair__1S3__S5____N_std_S_less__S0____N_std_S_allocator____N_std_S_pair__1S0__S2_
        {
            internal global::Std.CompressedPair.__Internalc__N_std_S__Compressed_pair____N_std_S_less____N_Gambit_S_GameObjectPtr____N_Gambit_S_GamePlayerRep___N_std_S__Compressed_pair____N_std_S_allocator____N_std_S__Tree_node____N_std_S_pair__1S1____N_std_S_map____N_Gambit_S_GameObjectPtr____N_Gambit_S_GameStrategyRep___N_Gambit_S_Rational___N_std_S_less__S8____N_std_S_allocator____N_std_S_pair__1S8__S10___v___N_std_S__Tree_val____N_std_S__Tree_simple_types__S6__Vb1_Vb1 _Mypair;
        }

        [StructLayout(LayoutKind.Sequential, Size = 16, Pack = 8)]
        public unsafe partial struct __Internalc__N_std_S_map____N_Gambit_S_GameObjectPtr____N_Gambit_S_GameNodeRep_b___N_std_S_less__S0____N_std_S_allocator____N_std_S_pair__1S0__b
        {
            internal global::Std.CompressedPair.__Internalc__N_std_S__Compressed_pair____N_std_S_less____N_Gambit_S_GameObjectPtr____N_Gambit_S_GameNodeRep___N_std_S__Compressed_pair____N_std_S_allocator____N_std_S__Tree_node____N_std_S_pair__1S1__b__v___N_std_S__Tree_val____N_std_S__Tree_simple_types__S6__Vb1_Vb1 _Mypair;
        }

        [StructLayout(LayoutKind.Sequential, Size = 16, Pack = 8)]
        public unsafe partial struct __Internalc__N_std_S_map____N_Gambit_S_GameObjectPtr____N_Gambit_S_GameInfosetRep_b___N_std_S_less__S0____N_std_S_allocator____N_std_S_pair__1S0__b
        {
            internal global::Std.CompressedPair.__Internalc__N_std_S__Compressed_pair____N_std_S_less____N_Gambit_S_GameObjectPtr____N_Gambit_S_GameInfosetRep___N_std_S__Compressed_pair____N_std_S_allocator____N_std_S__Tree_node____N_std_S_pair__1S1__b__v___N_std_S__Tree_val____N_std_S__Tree_simple_types__S6__Vb1_Vb1 _Mypair;
        }
    }

}
namespace Std
{
    namespace Vector
    {
        [StructLayout(LayoutKind.Sequential, Size = 24, Pack = 8)]
        public unsafe partial struct __Internalc__N_std_S_vector____N_std_S_vector____N_std_S_shared_ptr____N_Gambit_N_agg_S_proj_func___N_std_S_allocator__S1____N_std_S_allocator__S0_
        {
            internal global::Std.CompressedPair.__Internalc__N_std_S__Compressed_pair____N_std_S_allocator____N_std_S_vector____N_std_S_shared_ptr____N_Gambit_N_agg_S_proj_func___N_std_S_allocator__S2____N_std_S__Vector_val____N_std_S__Simple_types__S1__Vb1 _Mypair;
        }

        [StructLayout(LayoutKind.Sequential, Size = 24, Pack = 8)]
        public unsafe partial struct __Internalc__N_std_S_vector____N_std_S_vector____N_Gambit_N_agg_S_trie_map__d___N_std_S_allocator__S1____N_std_S_allocator__S0_
        {
            internal global::Std.CompressedPair.__Internalc__N_std_S__Compressed_pair____N_std_S_allocator____N_std_S_vector____N_Gambit_N_agg_S_trie_map__d___N_std_S_allocator__S2____N_std_S__Vector_val____N_std_S__Simple_types__S1__Vb1 _Mypair;
        }

        [StructLayout(LayoutKind.Sequential, Size = 24, Pack = 8)]
        public unsafe partial struct __Internalc__N_std_S_vector____N_Gambit_N_agg_S_trie_map__d___N_std_S_allocator__S0_
        {
            internal global::Std.CompressedPair.__Internalc__N_std_S__Compressed_pair____N_std_S_allocator____N_Gambit_N_agg_S_trie_map__d___N_std_S__Vector_val____N_std_S__Simple_types__S1__Vb1 _Mypair;
        }

        [StructLayout(LayoutKind.Sequential, Size = 24, Pack = 8)]
        public unsafe partial struct __Internalc__N_std_S_vector_____N_Gambit_N_agg_S_TrieNode__d___N_std_S_allocator__S0_
        {
            internal global::Std.CompressedPair.__Internalc__N_std_S__Compressed_pair____N_std_S_allocator_____N_Gambit_N_agg_S_TrieNode__d___N_std_S__Vector_val____N_std_S__Simple_types__S1__Vb1 _Mypair;
        }

        [StructLayout(LayoutKind.Sequential, Size = 24, Pack = 8)]
        public unsafe partial struct __Internalc__N_std_S_vector____N_std_S_shared_ptr____N_Gambit_N_agg_S_proj_func___N_std_S_allocator__S0_
        {
            internal global::Std.CompressedPair.__Internalc__N_std_S__Compressed_pair____N_std_S_allocator____N_std_S_shared_ptr____N_Gambit_N_agg_S_proj_func___N_std_S__Vector_val____N_std_S__Simple_types__S1__Vb1 _Mypair;
        }
    }
}
